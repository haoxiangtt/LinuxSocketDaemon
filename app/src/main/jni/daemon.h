/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include <android/log.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/types.h>
 #include <sys/stat.h>
 #include <sys/un.h>
#include <sys/socket.h>
#include <unistd.h>
#include <errno.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <time.h>

#define TAG "linux_socket_daemon" // 这个是自定义的LOG的标识
#define LOGD(...) __android_log_print(ANDROID_LOG_DEBUG,TAG ,__VA_ARGS__) // 定义LOGD类型
#define LOGI(...) __android_log_print(ANDROID_LOG_INFO,TAG ,__VA_ARGS__) // 定义LOGI类型
#define LOGW(...) __android_log_print(ANDROID_LOG_WARN,TAG ,__VA_ARGS__) // 定义LOGW类型
#define LOGE(...) __android_log_print(ANDROID_LOG_ERROR,TAG ,__VA_ARGS__) // 定义LOGE类型
#define LOGF(...) __android_log_print(ANDROID_LOG_FATAL,TAG ,__VA_ARGS__) // 定义LOGF类型

/* Header for class com_bfy_linuxsocketdaemon_DaemonWatcher */
#ifndef _Included_com_bfy_linuxsocketdaemon_DaemonWatcher
#define _Included_com_bfy_linuxsocketdaemon_DaemonWatcher
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_bfy_linuxsocketdaemon_DaemonWatcher
 * Method:    createDaemonServer
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_bfy_linuxsocketdaemon_DaemonWatcher_createDaemonServer
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_bfy_linuxsocketdaemon_DaemonWatcher
 * Method:    createDaemonClient
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_bfy_linuxsocketdaemon_DaemonWatcher_createDaemonClient
  (JNIEnv *, jobject);

void createServerSocket();

char* jstringToChar(JNIEnv*, jstring);

jstring charTojstring(JNIEnv*, const char*);

#ifdef __cplusplus
}
#endif
#endif
